<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只猿</title>
  
  <subtitle>java为主，python为辅，bug写遍天下无敌手</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-14T01:15:58.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jyl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我家门前有两棵树</title>
    <link href="http://yoursite.com/2019/02/13/two%20trees/"/>
    <id>http://yoursite.com/2019/02/13/two trees/</id>
    <published>2019-02-13T02:43:44.000Z</published>
    <updated>2019-02-14T01:15:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>​    我家门前有两棵树，一棵是桂花树，另一棵也是桂花树，09年到19年，已经十年了。</p><p>从不按时开花的树：八月等外面的桂花都开得正好的时候，我家的桂花开始结花蕊，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    我家门前有两棵树，一棵是桂花树，另一棵也是桂花树，09年到19年，已经十年了。&lt;/p&gt;
&lt;p&gt;从不按时开花的树：八月等外面的桂花都开得正好的时候，我家的桂花开始结花蕊，&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="记录生活" scheme="http://yoursite.com/tags/%E8%AE%B0%E5%BD%95%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>we</title>
    <link href="http://yoursite.com/2019/02/13/we/"/>
    <id>http://yoursite.com/2019/02/13/we/</id>
    <published>2019-02-13T01:48:44.000Z</published>
    <updated>2019-02-13T01:53:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>某年过完年回到北京的某一天（具体哪一天不记得了，只大概记得是过完年没几天），高中的校友群进来一位大神，额，之所以说是大神，是因为一进来就受到az等人的吹捧，原谅我，对我们高中的名人和对大学的名人一样，一无所知，毕竟我是两耳不闻窗外事，一心只读圣贤书的好孩子…好吧，我其实就是懒，对所有与我无关的事情都不愿意花一点心思，当时就只有一个想法，也不知道这位大神是清华的还是北大…</p><p>后来经常在群里看到大神发红包发言论，我就想这个大神学长和其他高冷的学长不一样啊，某一天又看到大神发言，萌发了想要围观大神朋友圈的念头，其中主要一点还是确认到底是清华的还是北大…我看大家都知道的样子，就我一个学渣不知道…还有就是想看看的大神的朋友圈和我等凡人有何不同…所以，就是想围观一下大神的朋友圈，所以恶向胆边生，加了大神的微信…</p><p>我曾经有过那么两回后悔这个一时冲动的决定，感叹好奇心害死猫</p><p>第一回是正当我翻着大神朋友圈收到他给我发消息的时候…我是这么想的，同一个群里加老乡好友，可以理解为就是加好友，不聊天，这还挺常见的吧…结果大神果然是大神，完全不按常理出牌…于是开始聊天…嗯，聊天…聊完后我把手机一扔，跟yy吐槽我的大神学长</p><p>学长问，学妹是哪个学校的？</p><p>我，blcu，</p><p>学长说，贵校怎么样怎么样…</p><p>我…贵校？？，这个话没法接啊..</p><p>学长又问，学妹是哪个专业啊？</p><p>我，kj</p><p>学长说，贵专业怎么样怎么样</p><p>我…贵专业？？，这个话应该怎么接…</p><p>…</p><p>诸如此类</p><p>聊完之后我感觉身心受到了极大的创伤，很是思考了一阵是大神说话完全不按常理出牌还是我落后世界太久，不能理解这个世界的表达方式了，还好yy和我想法一致，就是大神的心思果然不是我等凡人所能揣测的，让我重拾了一点自信。于是我继续翻大神的朋友圈…毕竟这才是我的目标…</p><p>翻完朋友圈后，我再次把手机一扔，北大本科研究生啊，果然大神，朋友圈除了技术分享就是团队合作分享，嗯，果然大神，跟我这种朋友圈一天到晚嘻嘻哈哈的人就不是一个物种的</p><p>这之后事情有了奇怪的走向</p><p>大神学长和我保留着一周一次的聊天频率，聊天内容，额，还是有点虐心，比如说师妹对货币基金是不是应该比较了解，对股票有没有研究…我想说没有来着，一想我是学kj的，太丢人了吧，又不敢在大神面前班门弄斧，谁知道大神了解到什么程度，学渣也是要面子的好不好，于似乎每次一聊到专业问题我就很紧张，顺便思考大神师兄为什么找我聊天，难道我看起来kj学得还不错…（我也不知道为什么大神不叫学妹叫师妹了，反正我这人从善如流，别人叫我学姐学妹，我就学妹学长，别人叫我师姐师妹，我就师妹师兄了…）</p><p>前面说到我有两次后悔，第二次来了</p><p>三月底的某一天，那会儿我正在，我妈某一天给我发消息，说是我们村谁谁的姑姑，给我介绍了一个相亲对象，北京大学毕业，从事计算机相关行业，在北京一家国企上班，比我大两三岁，唯一的缺点就是不是很高…我当时简直惊出一身冷汗。鉴于我大学一毕业就开始被逼相亲，想我一个花季少女，刚一毕业就被贴上了嫁不出去需要相亲的标签，自己十分非常相当特别尤其不愿意，但是又抵不过七大姑八大姨的各种意愿，杀伤力最大的一句话莫过于我是为你好，我又得不到什么好之类的话，总之你就是不能不去，不去就是不惜好，去了不满意还不能当场拒绝，不然就是不给亲戚面子…我…宝宝心里苦…所以我对相亲对象的态度都不怎么积极，倒也不是迁怒，主要是一开始是没抱着成的心态，觉得自己不能给别人造成错觉</p><p>当时简直想先死一死，大神师兄北京大学毕业，目测是计算机相关行业，是否国企不知道，比我大几岁不知道，身高不知道，我只是想看个朋友圈而已，不至于报应这么大吧，变成相亲对象？？？还是我加的别人的微信？？？还是想去死一死/(ㄒoㄒ)/~~</p><p>于是</p><p>我，妈，北大的不行，北大的我压力太大了</p><p>我妈，怎么就不行了，你压力大什么，吧啦吧啦，主要就一句话，你谁都配得上，要有自信，不能自卑，巴拉巴拉</p><p>我…</p><p>我自卑了？简直给自己挖了一个大坑，所以为了证明我不是自卑，这个相亲对象我是必须联系一下了？搬起石头砸自己的脚就是我了吧？</p><p>这之后两天，我看着联系人列表里的大神师兄都无限纠结，叫你手贱叫你好奇叫你手贱！直到两天后接到了一个北京的电话，挂起的心才算是回到肚子里，还好，还好不是同一个人，顺便吐槽一下，第一次遇到这种直接打电话的也是吓我一小跳</p><p>那一阵电脑之前加锁出了问题，忙的焦头烂额的，每天都是凌晨两三点才放下电脑，所以和这位相亲的学长更是没聊两句，w学长也不怎么想聊天的样子，基本每天都是吃饭了么，下班了么，今天也还在加班么诸如此类，两天以后我感觉时机到了，于是和w学长摊牌，其一，学长您是学霸中的学霸，我是学渣中的学渣，我一看到学霸只剩敬畏了，生不出觊觎之心啊，其二，我觉得自己年纪还小，还不到需要相亲的时候，其三，那我们就这么说好了啊，亲就不相了吧，就当是在北京认识老乡了。然后就把他拉到了高中的校友群里。后来我发现，这位学长是一个真正的老实人，也不是北大的，是北师的，也不是国企上班，和大神师兄是高中三年同学，他是真的不会和女生聊天，进群里大家起哄发红包就发了很大一个红包，具体多大不知道，只知道群里七八十好人人均一块以上，还好我没有欺负过他…顺便，相亲的介绍人也太不靠谱了，我白担心那么久，还让我妈觉得我不自信…</p><p>此时，我和大神师兄基本还保持着一周一次的聊天频率，开始会聊一些天气啊而且因为我出差不在北京，会聊一聊当地的特色之类的，朋友圈是点赞之交了，我依然会偶尔疑惑我们为什么会聊天，我将其归结为，大神师兄是一个面面俱到的人，估计不是我，是其他老乡学妹也是一样的会聊一聊。</p><p>四月的某一个周六，当时我正在外地出差，难得的一个不加班的周六，正和项目组的小伙伴在大雁塔的广场上看喷泉，刷朋友圈看到师兄的po图和此时离我打车十分钟左右的古城墙十分相似，看了一眼定位，感叹一下这也太巧了吧，于是微信聊天约定回北京后约饭，顺便聊了一聊在西安的出游计划，得知师兄想去华山，但是后来因为天气原因未能去成，之后的某一个周末我和小伙伴们一起去了华山，因为遇到一些有意思的人，所以准备小小的记录一下</p><p>早上坐高铁从西安到华山北，然后打车到华山脚下，值得一提的是，并不是到了华山脚下就可以上山了，我们是从北峰上，南峰下。北峰山脚下到售票点需要穿过玉泉寺，也是一路上山，走到售票处需要将近半小时，我们私下讨论觉得这是一个警示，提醒前来爬山的人们如果售票处都走不到，还是打消上华山的念头吧。</p><p>售票处遇到一对老夫妻，两人都是头发发白，佝偻着背，看完票价下台阶都是扶着栏杆，，男老人手上提着一个透明塑料袋外加一大瓶的农夫山泉，塑料袋里装着白膜和鸡蛋，对比一下我们一行四个人，背了三个大书包，里面包括前一天晚上采购的十二瓶水，6瓶红牛，一袋黄瓜，一袋小西红柿，一袋桃子，一袋苹果，两个超大火腿肠，一大盒士力架，两大包溜溜梅，两位老人算是轻装简行了。只是看着他们颤颤巍巍的样子，让人怀疑的同时又很让人担心。然而事实是，这两位老人的速度一直和我们不相上下，确切的说是，开始我们领先，然后走了一会儿我们开始休息了，他们就超过我们，等我们休息完了，再超过他们，再休息了，他们就又超过我们…如此循环往复，也就是说，这一路我们除了看到他们停下来吃东西外，没见过他们休息，一直都是稳稳得往上走，简直惊掉了众人的下巴。</p><p>一路上可以看到很多背着帐篷或者是裹着军大衣下山的人，这部分应该就是在山上过夜看日出的人了，一位父亲牵着小女儿下山，小姑娘的表情很严肃，除了佩服，我也是生不出别的感慨了。走了大概半小时，一位大叔说不行了，要往回走，小伙伴开玩笑说，你们信不信，即使他现在下去了，回去也会和别人吹牛说爬过华山了。</p><p>在北峰顶去往南峰的路上，遇到一个小哥和一群妹子，这个地方人很多，由南往北，由北往南的人群聚集在这里，小哥一边搞笑逗妹子们开心，一边随意和路人聊天，在知道老夫妻都八十多岁以后大声叫到：“我的天，八十岁的人都爬上来了，我十八岁都爬不动”。听到的行人哄然大笑，此时我正站在高一点的台阶上等一个妹子，一路上都是如此，两个同事一路往前，我一边跟着他们一边等后面走不动的小伙伴。妹子从一开始登山就走不动的样子，我们为此灌了她两瓶红牛，据说她此前从未喝过红牛，喝完后瞬间跟打了鸡血一样蹭蹭快走了一阵，简直可以作为红牛的广告了。两个小时后估计是两瓶红牛耗尽，又开始耷拉着走不动了。不知道是不是受了小哥大喊一声的刺激，她忽然停下来用手指着我喊道：“jyl，我佩服你是条汉子”顺便和小哥交流了一下我的包有多重我一个女孩子背着还跑得飞快，小哥一听跑步到我身边和我换了包背了一会…那样子一点不像爬不动，然后又和我交流了一下他的包有多重巴拉巴拉，我…</p><p>在北峰顶上的时候，妹子和我说，其实相对华山，还是秦岭对她的吸引跟大。大概两三周以前，我们去金丝峡爬了秦岭，那天下着小雨，登到山顶的时候遇到了云海，翻山的阶梯是环山型，每一个转弯都是不同的风景，云海和满目的苍翠，加之山底的湖水小船，每一次的拐角都是新的惊喜，是绵延的云海是连绵的绿山是波光粼粼的水，云海形状变换不停，能清晰的看到转移、消散、聚拢的过程。</p><p>而华山，是完全不同于秦岭的。</p><p>爬华山的那天是大晴天，即使登到山顶也还是感觉天高云淡。华山的连绵也不像秦岭那般多情，更像一副水墨画，北峰顶上的眺望，满目都是山的颜色，连树都是独立的，南峰涯边的桃花灿烂，相比北峰添了一丝色彩，中峰栈道的险峻，不仅给登山人带来感官上的刺激，也给华山增添了神秘，东峰的瞭望台和树林是整个华山树木最茂密的，给华山增添了一抹柔情。</p><p>华山的美，是波澜壮阔的。</p><p>晚上回到锦江之星已经是十点十一点了，吃泡面的时候看到师兄有给我发消息文cash和current的区别，然后我顺便和他交流了一下爬华山的体验，分享了一下照片，加了两个小时班，就睡了。</p><p>那时还是觉得这是一位超级学霸的师兄，虽然不知道为什么会偶尔聊天，从没想过后来我们会有这么多的羁绊.</p><p>六月十几号的时候，当时正好wqh在北京出差，又约了wh和qg去北科吃瓜，想着要把所有约完的饭都吃掉，于是6.18 wqh西贝吃晚饭，6月20师兄串亭晚饭，6月21北科wh和qg午饭，当时wqh刚刚和他女朋友在一起，出差都是粘的不行，一直手机聊天，当时也正好在和师兄说约饭的时间地点，wqh问我和谁聊天，我说一个高中的师兄，要一起吃个饭。于是他八卦了</p><p>“新男朋友？”</p><p>“不敢”</p><p>“还有你不敢的事？”</p><p>“这个师兄等级太高，和我不是一个level啊”</p><p>…</p><p>结果6月18吃完饭回去，开始嗓子疼脱水，6月19开始有点发烧，一整天就没起来，也没吃东西，可能是长时间压力大一下子松懈了，晚上yy下班给买了药才好点，当时还想着，这幸好师兄约的是明天不是今天，不然我肯定是去不了。20号的时候我出门比较早，刚好遇到了下班回来的yy，顺便问了问我脸油不油，当时感觉很油但是实在懒得再去洗一个脸，yy上上下下看了一遍说，脸是不油，就是眉毛太粗了，我掏出手机照了照，确实有点粗，算了，大晚上的应该看不清吧，就这么去了。结果真的是去得太早了，我在朝阳大悦城溜溜达达了半个小时才和师兄说我到了，然后进去找了个角落里的位置坐着（对，我就是这么贴心不想给人压力，对，我也是蜜汁喜欢坐在角落里），然后玩手机等人。</p><p>7点多一点接到电话，看到门口的人，嗯，和照片长得一样，声音和想的不一样，两个人有点尴尬…然后我又在开始思考，为什么我们要约饭，为什么要吃日料，我不想吃生鱼片，不要和我谈股票基金好不好，我不知道你懂多少不敢瞎说啊，万一不小心漏馅了怎么办，我不要面子的啊…反正就是聊得也不多，总体师兄主导话题，我跟着附和两句…那两天估计是脑子瓦特了，觉得师兄的声音有点娘，走在他后面感觉屁股很翘…原谅我吧，我也不知道为什么我的关注点这么奇特，我真不是色女，然后第二天见到wh感觉wh的声音也有点娘，我就反思可能是我自己的问题…</p><p>走的时候我想着这以后估计是不会再见面了，这也不好意思蹭人家一顿饭，这也不好意思开口问花了多少钱，莫名的相亲既视感，于是等到上了地铁才给发微信说AA，师兄回到说下次吧，下次你请，我也只当是一句客气话。第一次见面，两个人话都不多，总体也还算愉快。</p><p>后来，事情不是我想的以后不会再见面，而是只要我在北京，师兄经常会约我见面，看电影吃饭溜公园，这其中又有很多哭笑不得的事情，比如说他第一次约我看电影</p><p>师兄:感觉你会更喜欢文艺一点的电影，比如说冈仁波齐，回归狼群…当然如果你想看加勒比海盗也可以（一共说了六七个选择吧，我现在记不清了）</p><p>我：除了加勒比海盗不想看</p><p>师兄：没想到我居然猜错了，那我们去看加勒比海盗好了，刚好我也挺喜欢这类的电影</p><p>我：？？</p><p>我：我是说除了加勒比海盗不想看，其他的都想看</p><p>师兄:…这</p><p>师兄:姑娘，你说话为什么不断句</p><p>师兄：不过这也至少说明我没有猜错</p><p>…</p><p>……</p><p>……</p><p>……</p><p>哈哈哈，现在想来也是很可爱了，所以，当然了，后来我们在一起了（未完待续……）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;某年过完年回到北京的某一天（具体哪一天不记得了，只大概记得是过完年没几天），高中的校友群进来一位大神，额，之所以说是大神，是因为一进来就受到az等人的吹捧，原谅我，对我们高中的名人和对大学的名人一样，一无所知，毕竟我是两耳不闻窗外事，一心只读圣贤书的好孩子…好吧，我其实就是
      
    
    </summary>
    
    
      <category term="记录生活" scheme="http://yoursite.com/tags/%E8%AE%B0%E5%BD%95%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>java AD域认证</title>
    <link href="http://yoursite.com/2019/02/13/ad/"/>
    <id>http://yoursite.com/2019/02/13/ad/</id>
    <published>2019-02-13T00:28:44.000Z</published>
    <updated>2019-05-20T15:15:22.484Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.Hashtable;</span><br><span class="line"></span><br><span class="line">import javax.naming.AuthenticationException;</span><br><span class="line">import javax.naming.Context;</span><br><span class="line">import javax.naming.directory.DirContext;</span><br><span class="line">import javax.naming.directory.InitialDirContext;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class AdTest &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">String userName = &quot;jyl&quot;;//AD域认证，用户的登录UserName</span><br><span class="line">String password = &quot;xxx&quot;;//AD域认证，用户的登录PassWord</span><br><span class="line">String host = &quot;xxx&quot;;//AD域IP，必须填写正确   已经加入的域</span><br><span class="line">String domain = &quot;xxx&quot;;//域名后缀</span><br><span class="line">String port = &quot;389&quot;; //端口，一般默认389</span><br><span class="line">String user = userName.indexOf(domain) &gt; 0 ? userName : userName</span><br><span class="line">                + domain;</span><br><span class="line">connect(host, port, user, password);</span><br><span class="line">&#125;</span><br><span class="line">public static void connect(String host, String port, String username, String password) &#123;</span><br><span class="line">DirContext ctx = null;</span><br><span class="line">Hashtable&lt;String, String&gt; HashEnv = new Hashtable&lt;String, String&gt;();</span><br><span class="line">HashEnv.put(Context.SECURITY_AUTHENTICATION, &quot;simple&quot;); // LDAP访问安全级别(none,simple,strong);</span><br><span class="line">HashEnv.put(Context.SECURITY_PRINCIPAL, username); // AD的用户名</span><br><span class="line">HashEnv.put(Context.SECURITY_CREDENTIALS, password); // AD的密码</span><br><span class="line">HashEnv.put(Context.INITIAL_CONTEXT_FACTORY, &quot;com.sun.jndi.ldap.LdapCtxFactory&quot;); // LDAP工厂类</span><br><span class="line">HashEnv.put(&quot;com.sun.jndi.ldap.connect.timeout&quot;, &quot;3000&quot;);// 连接超时设置为3秒</span><br><span class="line">HashEnv.put(Context.PROVIDER_URL, &quot;ldap://&quot; + host + &quot;:&quot; + port);// 默认端口389</span><br><span class="line">try &#123;</span><br><span class="line">ctx = new InitialDirContext(HashEnv);// 初始化上下文</span><br><span class="line">System.out.println(&quot;身份验证成功!&quot;);</span><br><span class="line">&#125; catch (AuthenticationException e) &#123;</span><br><span class="line">System.out.println(&quot;身份验证失败!&quot;);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (javax.naming.CommunicationException e) &#123;</span><br><span class="line">System.out.println(&quot;AD域连接失败!&quot;);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">System.out.println(&quot;身份验证未知异常!&quot;);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">if (null != ctx) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">ctx.close();</span><br><span class="line">ctx = null;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="技术分享" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>102. Binary Tree Level Order Traversal</title>
    <link href="http://yoursite.com/2019/02/01/102.%20Binary%20Tree%20Level%20Order%20Traversal/"/>
    <id>http://yoursite.com/2019/02/01/102. Binary Tree Level Order Traversal/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:18:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree, return the <em>level order</em> traversal of its nodes’ values. (ie, from left to right, level by level).</p><p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>return its level order traversal as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [3],</span><br><span class="line">  [9,20],</span><br><span class="line">  [15,7]</span><br><span class="line">]</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> result;</span><br><span class="line">        Queue&lt;TreeNode&gt; q = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        q.offer(root);</span><br><span class="line">        <span class="keyword">while</span>(! q.isEmpty()) &#123;</span><br><span class="line">            List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">int</span> size = q.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">                TreeNode node = q.poll();</span><br><span class="line">                list.add(node.val);</span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) q.offer(node.left);</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) q.offer(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(list);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree, return the &lt;em&gt;level order&lt;/em&gt; traversal of its nodes’ values. (ie, from left to right, level by level).&lt;/p&gt;
&lt;p&gt;For
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Medium" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Medium/"/>
    
  </entry>
  
  <entry>
    <title>103. Binary Tree Zigzag Level Order Traversal</title>
    <link href="http://yoursite.com/2019/02/01/103.%20Binary%20Tree%20Zigzag%20Level%20Order%20Traversal/"/>
    <id>http://yoursite.com/2019/02/01/103. Binary Tree Zigzag Level Order Traversal/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:19:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree, return the <em>zigzag level order</em> traversal of its nodes’ values. (ie, from left to right, then right to left for the next level and alternate between).</p><p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>return its zigzag level order traversal as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [3],</span><br><span class="line">  [20,9],</span><br><span class="line">  [15,7]</span><br><span class="line">]</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; zigzagLevelOrder(TreeNode root) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> result;</span><br><span class="line"><span class="keyword">boolean</span> odd = <span class="keyword">true</span>;</span><br><span class="line">Queue&lt;TreeNode&gt; q = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">q.offer(root);</span><br><span class="line"><span class="keyword">while</span> (! q.isEmpty()) &#123;</span><br><span class="line"><span class="keyword">int</span> len = q.size();</span><br><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">TreeNode node = q.poll();</span><br><span class="line">list.add(node.val);</span><br><span class="line"><span class="keyword">if</span> (node.left != <span class="keyword">null</span>) q.offer(node.left);</span><br><span class="line"><span class="keyword">if</span> (node.right !=  <span class="keyword">null</span>) q.offer(node.right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (odd) &#123;</span><br><span class="line">result.add(list);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Collections.reverse(list);</span><br><span class="line">result.add(list);</span><br><span class="line">&#125;</span><br><span class="line">odd = !odd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree, return the &lt;em&gt;zigzag level order&lt;/em&gt; traversal of its nodes’ values. (ie, from left to right, then right to left f
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Medium" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Medium/"/>
    
  </entry>
  
  <entry>
    <title>107. Binary Tree Level Order Traversal II</title>
    <link href="http://yoursite.com/2019/02/01/107.%20Binary%20Tree%20Level%20Order%20Traversal%20II/"/>
    <id>http://yoursite.com/2019/02/01/107. Binary Tree Level Order Traversal II/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:25:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree, return the <em>bottom-up level order</em> traversal of its nodes’ values. (ie, from left to right, level by level from leaf to root).</p><p>For example:<br>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>return its bottom-up level order traversal as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [15,7],</span><br><span class="line">  [9,20],</span><br><span class="line">  [3]</span><br><span class="line">]</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">Queue&lt;TreeNode&gt; q = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">q.offer(root);</span><br><span class="line"><span class="keyword">while</span> (! q.isEmpty()) &#123;</span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">int</span> size = q.size();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">TreeNode node = q.poll();</span><br><span class="line">list.add(node.val);</span><br><span class="line"><span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">q.offer(node.left);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">q.offer(node.right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">result.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">&#125; </span><br><span class="line">Collections.reverse(result);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree, return the &lt;em&gt;bottom-up level order&lt;/em&gt; traversal of its nodes’ values. (ie, from left to right, level by level fr
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>110. Balanced Binary Tree</title>
    <link href="http://yoursite.com/2019/02/01/110.%20Balanced%20Binary%20Tree/"/>
    <id>http://yoursite.com/2019/02/01/110. Balanced Binary Tree/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:26:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree, determine if it is height-balanced.</p><p>For this problem, a height-balanced binary tree is defined as:</p><blockquote><p>a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p></blockquote><p><strong>Example 1:</strong></p><p>Given the following tree <code>[3,9,20,null,null,15,7]</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>Return true.</p><p><strong>Example 2:</strong></p><p>Given the following tree <code>[1,2,2,3,3,null,null,4,4]</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">      1</span><br><span class="line">     / \</span><br><span class="line">    2   2</span><br><span class="line">   / \</span><br><span class="line">  3   3</span><br><span class="line"> / \</span><br><span class="line">4   4</span><br></pre></td></tr></table></figure><p>Return false.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBalanced</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maxDepth(root) != -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> leftDepth = maxDepth(root.left);</span><br><span class="line">        <span class="keyword">int</span> rightDepth = maxDepth(root.right);</span><br><span class="line">        <span class="keyword">if</span> (leftDepth == -<span class="number">1</span> || rightDepth == -<span class="number">1</span> || Math.abs(leftDepth - rightDepth) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + Math.max(leftDepth, rightDepth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree, determine if it is height-balanced.&lt;/p&gt;
&lt;p&gt;For this problem, a height-balanced binary tree is defined as:&lt;/p&gt;
&lt;block
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>104. Maximum Depth of Binary Tree</title>
    <link href="http://yoursite.com/2019/02/01/104.%20Maximum%20Depth%20of%20Binary%20Tree/"/>
    <id>http://yoursite.com/2019/02/01/104. Maximum Depth of Binary Tree/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:23:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree, find its maximum depth.</p><p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p><p><strong>Note:</strong> A leaf is a node with no children.</p><p><strong>Example:</strong></p><p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> / \</span><br><span class="line">9  20</span><br><span class="line">  /  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>return its depth = 3.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Math.max(maxDepth (root.left), maxDepth(root.right)) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree, find its maximum depth.&lt;/p&gt;
&lt;p&gt;The maximum depth is the number of nodes along the longest path from the root node do
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>112. Path Sum</title>
    <link href="http://yoursite.com/2019/02/01/112.%20Path%20Sum/"/>
    <id>http://yoursite.com/2019/02/01/112. Path Sum/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:27:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p><p><strong>Note:</strong> A leaf is a node with no children.</p><p><strong>Example:</strong></p><p>Given the below binary tree and <code>sum = 22</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">      5</span><br><span class="line">     / \</span><br><span class="line">    4   8</span><br><span class="line">   /   / \</span><br><span class="line">  11  13  4</span><br><span class="line"> /  \      \</span><br><span class="line">7    2      1</span><br></pre></td></tr></table></figure><p>return true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPathSum</span><span class="params">(TreeNode root, <span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span> &amp;&amp; root.val - sum == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>119. Pascal&#39;s Triangle II</title>
    <link href="http://yoursite.com/2019/02/01/119.%20Pascal&#39;s%20Triangle%20II/"/>
    <id>http://yoursite.com/2019/02/01/119. Pascal&#39;s Triangle II/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:30:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a non-negative index <em>k</em> where <em>k</em> ≤ 33, return the <em>k</em>th index row of the Pascal’s triangle.</p><p>Note that the row index starts from 0.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif" alt="img"><br>In Pascal’s triangle, each number is the sum of the two numbers directly above it.</p><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output: [1,3,3,1]</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getRow</span><span class="params">(<span class="keyword">int</span> rowIndex)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i  = <span class="number">1</span>; i &lt; rowIndex + <span class="number">1</span>; i++) &#123;</span><br><span class="line">            list.add(i,(<span class="keyword">int</span>)((<span class="keyword">long</span>)list.get(i-<span class="number">1</span>)*(rowIndex-i+<span class="number">1</span>)/i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a non-negative index &lt;em&gt;k&lt;/em&gt; where &lt;em&gt;k&lt;/em&gt; ≤ 33, return the &lt;em&gt;k&lt;/em&gt;th index row of the Pascal’s triangle.&lt;/p&gt;
&lt;p&gt;Note that
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>12. Integer to Roman</title>
    <link href="http://yoursite.com/2019/02/01/12.%20Integer%20to%20Roman/"/>
    <id>http://yoursite.com/2019/02/01/12. Integer to Roman/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-14T07:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Symbol       Value</span><br><span class="line">I             1</span><br><span class="line">V             5</span><br><span class="line">X             10</span><br><span class="line">L             50</span><br><span class="line">C             100</span><br><span class="line">D             500</span><br><span class="line">M             1000</span><br></pre></td></tr></table></figure><p>For example, two is written as <code>II</code> in Roman numeral, just two one’s added together. Twelve is written as, <code>XII</code>, which is simply <code>X</code> + <code>II</code>. The number twenty seven is written as <code>XXVII</code>, which is <code>XX</code> + <code>V</code> + <code>II</code>.</p><p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p><ul><li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9. </li><li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90. </li><li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li></ul><p>Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999.</p><p>将阿拉伯数字转化为罗马数字，并给出了一一对应关系。</p><p>分析：不知道咋分析系列，容易一时没有思路的题，直接看代码吧，代码非常好理解。详细代码如下：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">intToRoman</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        String[] M = &#123;<span class="string">""</span>, <span class="string">"M"</span>, <span class="string">"MM"</span>, <span class="string">"MMM"</span>&#125;;</span><br><span class="line">        String[] C = &#123;<span class="string">""</span>, <span class="string">"C"</span>, <span class="string">"CC"</span>, <span class="string">"CCC"</span>, <span class="string">"CD"</span>, <span class="string">"D"</span>, <span class="string">"DC"</span>, <span class="string">"DCC"</span>, <span class="string">"DCCC"</span>, <span class="string">"CM"</span>&#125;;</span><br><span class="line">        String[] X = &#123;<span class="string">""</span>, <span class="string">"X"</span>, <span class="string">"XX"</span>, <span class="string">"XXX"</span>, <span class="string">"XL"</span>, <span class="string">"L"</span>, <span class="string">"LX"</span>, <span class="string">"LXX"</span>, <span class="string">"LXXX"</span>, <span class="string">"XC"</span>&#125;;</span><br><span class="line">        String[] I = &#123;<span class="string">""</span>, <span class="string">"I"</span>, <span class="string">"II"</span>, <span class="string">"III"</span>, <span class="string">"IV"</span>, <span class="string">"V"</span>, <span class="string">"VI"</span>, <span class="string">"VII"</span>, <span class="string">"VIII"</span>, <span class="string">"IX"</span>&#125;;</span><br><span class="line">        <span class="keyword">return</span> M[num / <span class="number">1000</span>] + C[num % <span class="number">1000</span> / <span class="number">100</span>] + X[num % <span class="number">100</span> / <span class="number">10</span>] + I[num % <span class="number">10</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Roman numerals are represented by seven different symbols: &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Medium" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Medium/"/>
    
  </entry>
  
  <entry>
    <title>118. Pascal&#39;s Triangle</title>
    <link href="http://yoursite.com/2019/02/01/118.%20Pascal&#39;s%20Triangle/"/>
    <id>http://yoursite.com/2019/02/01/118. Pascal&#39;s Triangle/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:28:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a non-negative integer <em>numRows</em>, generate the first <em>numRows</em> of Pascal’s triangle.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif" alt="img"><br>In Pascal’s triangle, each number is the sum of the two numbers directly above it.</p><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Input: 5</span><br><span class="line">Output:</span><br><span class="line">[</span><br><span class="line">     [1],</span><br><span class="line">    [1,1],</span><br><span class="line">   [1,2,1],</span><br><span class="line">  [1,3,3,1],</span><br><span class="line"> [1,4,6,4,1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; generate(<span class="keyword">int</span> numRows) &#123;</span><br><span class="line">         List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (numRows == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">            List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span>) list.add(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == i) list.add(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">else</span> list.add(result.get(i - <span class="number">1</span>).get(j) + result.get(i - <span class="number">1</span>).get(j - <span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(list);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a non-negative integer &lt;em&gt;numRows&lt;/em&gt;, generate the first &lt;em&gt;numRows&lt;/em&gt; of Pascal’s triangle.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>121. Best Time to Buy and Sell Stock</title>
    <link href="http://yoursite.com/2019/02/01/121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock/"/>
    <id>http://yoursite.com/2019/02/01/121. Best Time to Buy and Sell Stock/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:31:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Say you have an array for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p><p>If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p><p>Note that you cannot sell a stock before you buy one.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,1,5,3,6,4]</span><br><span class="line">Output: 5</span><br><span class="line">Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.</span><br><span class="line">             Not 7-1 = 6, as selling price needs to be larger than buying price.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,6,4,3,1]</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: In this case, no transaction is done, i.e. max profit = 0.</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">b += prices[i] - prices[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (b &gt; a) &#123;</span><br><span class="line">a = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b &lt; <span class="number">0</span>) &#123;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Math.max(a, b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Say you have an array for which the &lt;em&gt;i&lt;/em&gt;th element is the price of a given stock on day &lt;em&gt;i&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you were only permitt
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>122. Best Time to Buy and Sell Stock II</title>
    <link href="http://yoursite.com/2019/02/01/122.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock%20II/"/>
    <id>http://yoursite.com/2019/02/01/122. Best Time to Buy and Sell Stock II/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:32:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>\122. Best Time to Buy and Sell Stock II</p><p>Easy</p><p>Say you have an array for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p><p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p><p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,1,5,3,6,4]</span><br><span class="line">Output: 7</span><br><span class="line">Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</span><br><span class="line">             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4,5]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</span><br><span class="line">             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are</span><br><span class="line">             engaging multiple transactions at the same time. You must sell before buying again.</span><br></pre></td></tr></table></figure><p><strong>Example 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,6,4,3,1]</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: In this case, no transaction is done, i.e. max profit = 0.</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] prices = &#123;<span class="number">7</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> maxProfit = maxProfit(prices);</span><br><span class="line">System.out.println(maxProfit);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (prices.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span>[] diff = <span class="keyword">new</span> <span class="keyword">int</span>[prices.length - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">diff[i - <span class="number">1</span>] = prices[i] - prices[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> dif: diff) &#123;</span><br><span class="line"><span class="keyword">if</span> (dif &gt; <span class="number">0</span>) &#123;</span><br><span class="line">sum += dif;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;\122. Best Time to Buy and Sell Stock II&lt;/p&gt;
&lt;p&gt;Easy&lt;/p&gt;
&lt;p&gt;Say you have an array for which the &lt;em&gt;i&lt;/em&gt;th element is the price of a gi
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>13. Roman to Integer</title>
    <link href="http://yoursite.com/2019/02/01/13.%20Roman%20to%20Integer/"/>
    <id>http://yoursite.com/2019/02/01/13. Roman to Integer/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-14T08:00:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Symbol       Value</span><br><span class="line">I             1</span><br><span class="line">V             5</span><br><span class="line">X             10</span><br><span class="line">L             50</span><br><span class="line">C             100</span><br><span class="line">D             500</span><br><span class="line">M             1000</span><br></pre></td></tr></table></figure><p>For example, two is written as <code>II</code> in Roman numeral, just two one’s added together. Twelve is written as, <code>XII</code>, which is simply <code>X</code> + <code>II</code>. The number twenty seven is written as <code>XXVII</code>, which is <code>XX</code> + <code>V</code> + <code>II</code>.</p><p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p><ul><li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9. </li><li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90. </li><li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li></ul><p>Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.</p><p>罗马数字转化为阿拉伯数字。</p><p>分析：这题和上一题是刚好相反的过程，但是我个人认为这一题难度比上一题大，因为罗马数字的表达相对单一一点，容易列举，不知道为啥上一题的难度是Median，这一题反而数Easy…猜测可能是上一题的解法不如是这一题常规，毕竟这一题是匹配最常用的工具Map，同样不知道怎么分析，直接看代码吧。</p><p>详细代码如下：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Character, Integer&gt;();</span><br><span class="line">        map.put(<span class="string">'I'</span>, <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">'V'</span>, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">'X'</span>, <span class="number">10</span>);</span><br><span class="line">        map.put(<span class="string">'L'</span>, <span class="number">50</span>);</span><br><span class="line">        map.put(<span class="string">'C'</span>, <span class="number">100</span>);</span><br><span class="line">        map.put(<span class="string">'D'</span>, <span class="number">500</span>);</span><br><span class="line">        map.put(<span class="string">'M'</span>, <span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> currVal = <span class="number">0</span>;</span><br><span class="line">        Character currChar = <span class="string">' '</span>;</span><br><span class="line">        <span class="keyword">int</span> prevVal = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            currChar = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(currChar)) &#123;</span><br><span class="line">                currVal = map.get(currChar);</span><br><span class="line">                <span class="keyword">if</span> (currVal &lt; prevVal) &#123;</span><br><span class="line">                    currVal = prevVal - currVal;</span><br><span class="line">                    result = result - prevVal + currVal;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    result = result + currVal;</span><br><span class="line">                &#125;</span><br><span class="line">                prevVal = currVal;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Roman numerals are represented by seven different symbols: &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;V&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>136. Single Number</title>
    <link href="http://yoursite.com/2019/02/01/136.%20Single%20Number/"/>
    <id>http://yoursite.com/2019/02/01/136. Single Number/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:35:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a <strong>non-empty</strong> array of integers, every element appears <em>twice</em> except for one. Find that single one.</p><p><strong>Note:</strong></p><p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [4,1,2,1,2]</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> num: nums) &#123;</span><br><span class="line">result ^= num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a &lt;strong&gt;non-empty&lt;/strong&gt; array of integers, every element appears &lt;em&gt;twice&lt;/em&gt; except for one. Find that single one.&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>137. Single Number II</title>
    <link href="http://yoursite.com/2019/02/01/137.%20Single%20Number%20II/"/>
    <id>http://yoursite.com/2019/02/01/137. Single Number II/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:36:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a <strong>non-empty</strong> array of integers, every element appears <em>three</em> times except for one, which appears exactly once. Find that single one.</p><p><strong>Note:</strong></p><p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,3,2]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,1,0,1,0,1,99]</span><br><span class="line">Output: 99</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> single = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> bitSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> num: nums) &#123;</span><br><span class="line">bitSum += (num &gt;&gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">single |= (bitSum % <span class="number">3</span>) &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a &lt;strong&gt;non-empty&lt;/strong&gt; array of integers, every element appears &lt;em&gt;three&lt;/em&gt; times except for one, which appears exactly on
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Medium" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Medium/"/>
    
  </entry>
  
  <entry>
    <title>125. Valid Palindrome</title>
    <link href="http://yoursite.com/2019/02/01/125.%20Valid%20Palindrome/"/>
    <id>http://yoursite.com/2019/02/01/125. Valid Palindrome/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p><p><strong>Note:</strong> For the purpose of this problem, we define empty string as valid palindrome.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;race a car&quot;</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.length() == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">s = s.toLowerCase();</span><br><span class="line"><span class="keyword">int</span> lb = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ub = s.length() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (lb &lt; ub) &#123;</span><br><span class="line"><span class="keyword">char</span> l = s.charAt(lb);</span><br><span class="line"><span class="keyword">char</span> u = s.charAt(ub);</span><br><span class="line"><span class="keyword">if</span> (l &lt; <span class="string">'a'</span> || l &gt; <span class="string">'z'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (l &lt; <span class="string">'0'</span> || l &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">lb ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (u &lt; <span class="string">'a'</span> || u &gt; <span class="string">'z'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (u &lt; <span class="string">'0'</span> || u &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">ub --;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (((l &gt;= <span class="string">'a'</span> &amp;&amp; l &lt;= <span class="string">'z'</span>) || (l &gt;= <span class="string">'0'</span> &amp;&amp; l &lt;= <span class="string">'9'</span>)) &amp;&amp; ((u &gt;= <span class="string">'a'</span> &amp;&amp; u &lt;= <span class="string">'z'</span>) || (u &gt;= <span class="string">'0'</span> &amp;&amp; u &lt;= <span class="string">'9'</span>)) &amp;&amp; l != u) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (((l &gt;= <span class="string">'a'</span> &amp;&amp; l &lt;= <span class="string">'z'</span>) || (l &gt;= <span class="string">'0'</span> &amp;&amp; l &lt;= <span class="string">'9'</span>)) &amp;&amp; ((u &gt;= <span class="string">'a'</span> &amp;&amp; u &lt;= <span class="string">'z'</span>) || (u &gt;= <span class="string">'0'</span> &amp;&amp; u &lt;= <span class="string">'9'</span>)) &amp;&amp; l == u) &#123;</span><br><span class="line">lb ++;</span><br><span class="line">ub --;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/stron
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>141. Linked List Cycle</title>
    <link href="http://yoursite.com/2019/02/01/141.%20Linked%20List%20Cycle/"/>
    <id>http://yoursite.com/2019/02/01/141. Linked List Cycle/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-15T00:37:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>Given a linked list, determine if it has a cycle in it.</p><p>To represent a cycle in the given linked list, we use an integer <code>pos</code> which represents the position (0-indexed) in the linked list where tail connects to. If <code>pos</code> is <code>-1</code>, then there is no cycle in the linked list.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: head = [3,2,0,-4], pos = 1</span><br><span class="line">Output: true</span><br><span class="line">Explanation: There is a cycle in the linked list, where tail connects to the second node.</span><br></pre></td></tr></table></figure><p><img src="https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png" alt="img"></p><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: head = [1,2], pos = 0</span><br><span class="line">Output: true</span><br><span class="line">Explanation: There is a cycle in the linked list, where tail connects to the first node.</span><br></pre></td></tr></table></figure><p><img src="https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png" alt="img"></p><p><strong>Example 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: head = [1], pos = -1</span><br><span class="line">Output: false</span><br><span class="line">Explanation: There is no cycle in the linked list.</span><br></pre></td></tr></table></figure><p><img src="https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png" alt="img"></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123;</span></span><br><span class="line"><span class="comment"> *         val = x;</span></span><br><span class="line"><span class="comment"> *         next = null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">ListNode slow = head;</span><br><span class="line">ListNode fast = head;</span><br><span class="line"><span class="keyword">while</span> (fast.next != <span class="keyword">null</span> &amp;&amp; fast.next.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">slow = slow.next;</span><br><span class="line">fast = fast.next.next;</span><br><span class="line"><span class="keyword">if</span> (slow == fast) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Given a linked list, determine if it has a cycle in it.&lt;/p&gt;
&lt;p&gt;To represent a cycle in the given linked list, we use an integer &lt;code&gt;pos
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
  <entry>
    <title>14. Longest Common Prefix</title>
    <link href="http://yoursite.com/2019/02/01/14.%20Longest%20Common%20Prefix/"/>
    <id>http://yoursite.com/2019/02/01/14. Longest Common Prefix/</id>
    <published>2019-02-01T08:49:44.000Z</published>
    <updated>2019-05-20T06:41:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Write a function to find the longest common prefix string amongst an array of strings.</p><p>If there is no common prefix, return an empty string <code>&quot;&quot;</code>.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">Output: &quot;fl&quot;</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class="line">Output: &quot;&quot;</span><br><span class="line">Explanation: There is no common prefix among the input strings.</span><br></pre></td></tr></table></figure><p>给定一个字符串数组，找到数组中字符串最长的相同前缀。如果没有，则返回””。</p><p>分析：唯一可以算的上是技巧的就是，找到长度最小的串，并一一与其他串对比</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (strs == <span class="keyword">null</span> || strs.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> min = strs[<span class="number">0</span>].length();</span><br><span class="line">        <span class="keyword">for</span> (String str : strs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.length() &lt; min) &#123;</span><br><span class="line">                min = str.length();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (min == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; min; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span>  j = <span class="number">1</span>; j &lt; strs.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (strs[<span class="number">0</span>].charAt(i) != strs[j].charAt(i)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> str;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            str += strs[<span class="number">0</span>].charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Write a function to find the longest common prefix string amongst an array of strings.&lt;/p&gt;
&lt;p&gt;If there is no common prefix, return an emp
      
    
    </summary>
    
    
      <category term="LeetCode刷题记录--Easy" scheme="http://yoursite.com/tags/LeetCode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Easy/"/>
    
  </entry>
  
</feed>
